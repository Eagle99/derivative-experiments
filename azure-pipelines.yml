# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:
- checkout: self
  submodules: true
- script: |
    # Add a backports repo in order to install the latest version of Go.
    sudo add-apt-repository ppa:longsleep/golang-backports
    sudo apt-get update
    # Install required dependencies.
    sudo apt -y install make tar wget curl rpm qemu-utils golang-1.13-go genisoimage pigz

    # Fix go 1.13 link
    /usr/bin/go version || echo "Failed to find /usr/bin/go, attempting to symlink"
    sudo ln -vs /usr/lib/go-1.13/bin/go /usr/bin/go || echo "Failed to symlink go, continuing"
  displayName: 'Install Prereqs'
- script: |
    cd cbl-mariner/toolkit
    sudo make build-packages -j$(nproc) CONFIG_FILE= REBUILD_TOOLS=y PROJECT_ROOT=$(pwd)/../..
  displayName: 'Build Packages'
- script: |
    cd cbl-mariner/toolkit
    sudo make image CONFIG_FILE=../../imageconfigs/container.json REBUILD_TOOLS=y PROJECT_ROOT=$(pwd)/../.. 
  displayName: 'Build Container'
- script: |
    cp -r out/RPMS $(Build.ArtifactStagingDirectory)
    cp -r out/images $(Build.ArtifactStagingDirectory)
  displayName: 'Stage Artifacts'
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'Published'
    publishLocation: 'Container'