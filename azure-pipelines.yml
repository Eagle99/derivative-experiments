# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:
- checkout: self
  submodules: true
- task: GoTool@0
  inputs:
    version: '1.13'
  displayName: 'Install Go 1.13'
- script: |
    sudo apt -y install make tar wget curl rpm qemu-utils genisoimage pigz
  displayName: 'Install Prereqs'
- script: |
    cd cbl-mariner/toolkit
    sudo make build-packages -j$(nproc) CONFIG_FILE= REBUILD_TOOLS=y PROJECT_ROOT=$(pwd)/../..
  displayName: 'Build Packages'
- script: |
    cd cbl-mariner/toolkit
    sudo make image CONFIG_FILE=../../imageconfigs/container.json REBUILD_TOOLS=y PROJECT_ROOT=$(pwd)/../.. 
  displayName: 'Build Container'
- script: |
    cp -r out/RPMS $(Build.ArtifactStagingDirectory)
    cp -r out/images $(Build.ArtifactStagingDirectory)
  displayName: 'Stage Artifacts'
- script: |
    docker import out/images/container/*.tar.gz $(DOCKER_REGISTRY)/mariner:latest
    docker tag $(DOCKER_REGISTRY)/mariner:latest $(DOCKER_REGISTRY)/mariner:$(Build.BuildId)
  displayName: 'Docker Import Image'
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'Published'
    publishLocation: 'Container'
  displayName: 'Publish Artifacts'
- script: |
    cd cbl-mariner/toolkit
    sudo make clean -j$(nproc) CONFIG_FILE= REBUILD_TOOLS=y PROJECT_ROOT=$(pwd)/../..
  displayName: 'Clean the build'
- task: Docker@2
  inputs:
    containerRegistry: 'hebeberm_docker_registry'
    command: 'login'
    addPipelineData: false
  displayName: 'Docker Registry Login'
- task: Docker@2
  inputs:
    containerRegistry: 'hebeberm_docker_registry'
    repository: 'mariner'
    command: 'push'
    tags: |
      $(Build.BuildId)
      latest
  displayName: 'Docker Push'
- task: Docker@2
  inputs:
    containerRegistry: 'hebeberm_docker_registry'
    command: 'logout'
    addPipelineData: false
  displayName: 'Docker Registry Logout'
